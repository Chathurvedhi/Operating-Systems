Question 2: Memory

1.
prog1.c
When the program is run normally, there is no error message occuring
When we use valgrind, it detects invalis memory write of size 4

Valgrind output:

==18800== Memcheck, a memory error detector
==18800== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==18800== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==18800== Command: ./prog
==18800== 
==18800== Invalid write of size 4
==18800==    at 0x1091D8: main (in /home/yolo/OS/Operating-Systems/Paging/prog)
==18800==  Address 0x4a6e1d0 is 0 bytes after a block of size 400 alloc'd
==18800==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==18800==    by 0x109168: main (in /home/yolo/OS/Operating-Systems/Paging/prog)
==18800== 
==18800== 
==18800== HEAP SUMMARY:
==18800==     in use at exit: 400 bytes in 1 blocks
==18800==   total heap usage: 1 allocs, 0 frees, 400 bytes allocated
==18800== 
==18800== LEAK SUMMARY:
==18800==    definitely lost: 400 bytes in 1 blocks
==18800==    indirectly lost: 0 bytes in 0 blocks
==18800==      possibly lost: 0 bytes in 0 blocks
==18800==    still reachable: 0 bytes in 0 blocks
==18800==         suppressed: 0 bytes in 0 blocks
==18800== Rerun with --leak-check=full to see details of leaked memory
==18800== 
==18800== For lists of detected and suppressed errors, rerun with: -s
==18800== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

The memory access is incorrect but the program runs without an error on the terminal.

2.
prog2.c
Again the progam runs normally when excecuted.
Valgrind detects a invalid read of size 4.

Valgrind output:

==19783== Memcheck, a memory error detector
==19783== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==19783== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==19783== Command: ./prog
==19783== 
==19783== Invalid read of size 4
==19783==    at 0x109183: main (in /home/yolo/OS/Operating-Systems/Paging/prog)
==19783==  Address 0x4a6e068 is 40 bytes inside a block of size 400 free'd
==19783==    at 0x484412F: free (vg_replace_malloc.c:974)
==19783==    by 0x10917A: main (in /home/yolo/OS/Operating-Systems/Paging/prog)
==19783==  Block was alloc'd at
==19783==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==19783==    by 0x10916A: main (in /home/yolo/OS/Operating-Systems/Paging/prog)
==19783== 
0
==19783== 
==19783== HEAP SUMMARY:
==19783==     in use at exit: 0 bytes in 0 blocks
==19783==   total heap usage: 2 allocs, 2 frees, 1,424 bytes allocated
==19783== 
==19783== All heap blocks were freed -- no leaks are possible
==19783== 
==19783== For lists of detected and suppressed errors, rerun with: -s
==19783== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Again the memory access is invalid making the program incorrect but it runs without an error on terminal.




